# -*- coding: utf-8 -*-
"""AvaliacaoNivelSatisfacaoDocentes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mCw5YRlWZNJk-z_jc9HnzZq9i5XmhfKW
"""

# 📌 Importação das bibliotecas necessárias
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os

# 📂 Caminho do arquivo Excel com as respostas
file_path_xlsx = "/content/Avaliação do Nível de Satisfação dos Serviços prestados pelos docentes (respostas)_2.xlsx"
df = pd.read_excel(file_path_xlsx)

# 🔄 Renomear colunas para facilitar a análise
df.columns = [
    "Timestamp", "Email", "Tempo de Estudo", "Gênero", "Idade",
    "Conhecimento do Professor", "Explicações Claras", "Disponibilidade",
    "Métodos de Ensino", "Incentivo à Participação", "Avaliação Justa",
    "Feedback", "Preocupação com Alunos", "Ambiente Respeitoso",
    "Satisfação Geral", "Comentários"
]

# ❌ Remover colunas irrelevantes para a análise quantitativa
df = df.drop(columns=["Timestamp", "Email", "Comentários"], errors="ignore")

# 🔢 Converter respostas textuais em valores numéricos usando replace() (mais rápido)
conversion_dict = {
    "1 - Discordo totalmente": 1,
    "2 - Discordo parcialmente": 2,
    "3 - Neutro": 3,
    "4 - Concordo parcialmente": 4,
    "5 - Concordo totalmente": 5
}

df.replace(conversion_dict, inplace=True)

# 📋 Lista de perguntas para análise (agora inclui TODAS as perguntas)
perguntas = list(df.columns)  # Usa todas as colunas como perguntas

# 📂 Criar diretório para armazenar gráficos
output_dir = "graficos"
os.makedirs(output_dir, exist_ok=True)

# 🔹 Função para gerar e salvar gráficos
def gerar_graficos(pergunta):
    print(f"📊 Gerando gráficos para: {pergunta}")

    # 📊 Gráfico de Pizza (apenas para perguntas com valores categóricos)
    if df[pergunta].dtype == "object":
        fig_pizza = os.path.join(output_dir, f"{pergunta}_pizza.png")
        plt.figure(figsize=(6, 4))
        df[pergunta].value_counts().plot.pie(
            autopct='%1.1f%%', cmap="Blues", startangle=90, wedgeprops={'edgecolor': 'black'}
        )
        plt.title(f"Distribuição das Respostas - {pergunta}")
        plt.ylabel("")
        plt.savefig(fig_pizza)
        plt.close()

    # 📈 Histograma (para perguntas quantitativas)
    if df[pergunta].dtype in ["int64", "float64"]:
        fig_hist = os.path.join(output_dir, f"{pergunta}_hist.png")
        plt.figure(figsize=(6, 4))
        sns.histplot(df[pergunta], bins=5, kde=True, color="royalblue")
        plt.title(f"Frequência das Respostas - {pergunta}")
        plt.xlabel("Nível de Concordância")
        plt.ylabel("Frequência")
        plt.xticks(range(1, 6))
        plt.savefig(fig_hist)
        plt.close()

        # 📊 Boxplot
        fig_box = os.path.join(output_dir, f"{pergunta}_boxplot.png")
        plt.figure(figsize=(6, 4))
        sns.boxplot(x=df[pergunta], color="skyblue")
        plt.title(f"Variação das Respostas - {pergunta}")
        plt.xlabel("Nível de Concordância")
        plt.savefig(fig_box)
        plt.close()

# 📊 Loop para gerar gráficos para TODAS as perguntas
for pergunta in perguntas:
    gerar_graficos(pergunta)

print("✅ Todos os gráficos foram gerados e salvos na pasta 'graficos'.")